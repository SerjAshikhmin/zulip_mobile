package ru.tinkoff.android.coursework.data

import ru.tinkoff.android.coursework.model.EmojiWithCount
import ru.tinkoff.android.coursework.model.Message
import ru.tinkoff.android.coursework.model.Reaction
import java.time.LocalDate
import java.time.LocalDateTime

// –ø–æ–∏—Å–∫ —Å–ø–∏—Å–∫–∞ —ç–º–æ–¥–∂–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
// –Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id, –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
// –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç –∏ –ø–æ–º–µ—á–∞–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
internal fun getEmojisForMessage(messageId: Long): List<EmojiWithCount> {
    val message = messages.first { it is Message && it.id == messageId }
    return if (message is Message) {
        val emojiList = mutableListOf<EmojiWithCount>()
        message.reactions
            .groupBy { reaction -> reaction.code }
            .map { emoji -> emoji.key to emoji.value.size }
            .mapTo(emojiList) { emoji -> EmojiWithCount(emoji.first, emoji.second)}

        emojiList.forEach { emojiWithCount ->
            val selfReaction = message.reactions.firstOrNull { reaction ->
                reaction.userId == SELF_USER_ID && reaction.code == emojiWithCount.code
            }
            if (selfReaction != null) emojiWithCount.selectedByCurrentUser = true
        }
        return emojiList
    } else {
        listOf()
    }
}

internal var messages = mutableListOf(
    LocalDate.now().minusDays(1),
    Message(
        id = 1,
        userId = 2,
        content = "–ù–µ —Å–ª–µ–¥—É–µ—Ç, –æ–¥–Ω–∞–∫–æ, –∑–∞–±—ã–≤–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ " +
            "—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.",
        reactions = listOf(
            Reaction(userId = 1, code = "üëç"),
            Reaction(userId = 2, code = "üëç"),
            Reaction(userId = 2, code = "üòå"),
            Reaction(userId = 1, code = "üòé"),
            Reaction(userId = 2, code = "üòõ"),
            Reaction(userId = 1, code = "üòè"),
            Reaction(userId = 3, code = "üëç"),
            Reaction(userId = 4, code = "üëç"),
            Reaction(userId = 5, code = "üëç"),
            Reaction(userId = 6, code = "üëç"),
            Reaction(userId = 7, code = "üëç"),
            Reaction(userId = 8, code = "üëç"),
            Reaction(userId = 9, code = "üëç"),
        ),
        sendDateTime = LocalDateTime.now().minusDays(1)
    ),
    Message(
        id = 2,
        userId = 1,
        content = "Like the technical community as a whole, the Zulip team and community is made " +
                "up of a mixture of professionals and volunteers from all over the world, working" +
                " on every aspect of the mission, including mentorship, teaching, and connecting" +
                " people.\n\nDiversity is one of our huge strengths, but it can also lead to " +
                "communication issues and unhappiness. To that end, we have a few ground rules " +
                "that we ask people to adhere to. This code applies equally to founders, mentors," +
                " and those seeking help and guidance.\n\nThis isn't an exhaustive list of things" +
                " that you can't do. Rather, take it in the spirit in which it's intended --- a" +
                " guide to make it easier to enrich all of us and the technical communities in" +
                " which we participate.",
        reactions = listOf(
            Reaction(userId = 6, code = "üëç"),
            Reaction(userId = 7, code = "üëç"),
            Reaction(userId = 1, code = "üòè")
        ),
        sendDateTime = LocalDateTime.now().minusDays(1)
    ),
    LocalDate.now(),
    Message(
        id = 3,
        userId = 2,
        content = "–†–∞–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–º–µ—á–µ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–ø—Ä—è–º—É—é –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–∞–∑–≤–∏—Ç–∞—è —Å–∏—Å—Ç–µ–º—ã –º–∞—Å—Å–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–∏—è.",
        reactions = listOf(),
        sendDateTime = LocalDateTime.now()
    )
)
